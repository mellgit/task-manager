version: "3.8"

services:
  taskmanager:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: taskmanager
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./config.yml:/home/app/config.yml:ro
      - ./.env:/home/app/.env:ro
    depends_on:
      - postgres
    ports:
      - "3000:3000"
    env_file:
      - .env
    restart: "always"
    command: [ "./tm", "-config", "/home/app/config.yml" ]
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  postgres:
    image: postgres:17.2-bullseye
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: "/var/lib/postgresql/data"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    restart: "always"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  kafka:
    image: bitnami/kafka:3.6.1
    container_name: kafka
    user: "0:0" # WARNING!!! use only in development
    ports:
      - "9092:9092"  # broker
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=ZHVtbXktY2x1c3Rlci1pZA # the base64 format is 22 characters long
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - ./kafka_data:/bitnami/kafka

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local-kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181  # не используется в kraft, но может потребоваться
    depends_on:
      - kafka